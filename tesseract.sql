-- MySQL Script generated by MySQL Workbench
-- 02/14/16 13:54:42
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`organisation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`organisation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NULL,
  `adress` VARCHAR(45) NULL,
  `matricule` VARCHAR(45) NULL,
  `photo` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `matricule_UNIQUE` (`matricule` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`utilisateur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`utilisateur` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_organisation` INT NULL,
  `pseudo` VARCHAR(45) NULL,
  `mdp` VARCHAR(45) NULL,
  `nom` VARCHAR(45) NULL,
  `prenom` VARCHAR(45) NULL,
  `date_naissance` DATE NULL,
  `telephne` INT NULL,
  `adresse` VARCHAR(45) NULL,
  `mail` VARCHAR(45) NULL,
  `photo` VARCHAR(100) NULL,
  `role` VARCHAR(3) NULL,
  `score` INT NULL,
  `cv` VARCHAR(100) NULL,
  `etat` VARCHAR(3) NULL,
  `mail_sercours` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_users_organisations1_idx` (`id_organisation` ASC),
  UNIQUE INDEX `nom_utilisateur_UNIQUE` (`pseudo` ASC),
  CONSTRAINT `fk_users_organisations1`
    FOREIGN KEY (`id_organisation`)
    REFERENCES `mydb`.`organisation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`reclamation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`reclamation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_utilisateur` INT NULL,
  `sujet` VARCHAR(200) NULL,
  `description` TEXT(100) NULL,
  `etat` VARCHAR(3) NULL,
  `date` DATE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reclamation_utilisateur1_idx` (`id_utilisateur` ASC),
  CONSTRAINT `fk_reclamation_utilisateur1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `mydb`.`utilisateur` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`matiere`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`matiere` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nom_UNIQUE` (`nom` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cours` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_matiere` INT NULL,
  `nom` VARCHAR(45) NULL,
  `difficulte` VARCHAR(45) NULL,
  `description` TEXT NULL,
  `badge` VARCHAR(100) NULL,
  `affiche` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_cours_matiere1_idx` (`id_matiere` ASC),
  CONSTRAINT `fk_cours_matiere1`
    FOREIGN KEY (`id_matiere`)
    REFERENCES `mydb`.`matiere` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`chapitre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`chapitre` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_cours` INT NULL,
  `nom` VARCHAR(45) NULL,
  `numero` INT NULL,
  `description` TEXT NULL,
  `resume` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_chapitre_cours1_idx` (`id_cours` ASC),
  CONSTRAINT `fk_chapitre_cours1`
    FOREIGN KEY (`id_cours`)
    REFERENCES `mydb`.`cours` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`objectif`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`objectif` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_chapitre` INT NULL,
  `nom` VARCHAR(45) NULL,
  `description` TEXT NULL,
  `difficule` VARCHAR(3) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_objectif_chapitre1_idx` (`id_chapitre` ASC),
  CONSTRAINT `fk_objectif_chapitre1`
    FOREIGN KEY (`id_chapitre`)
    REFERENCES `mydb`.`chapitre` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`epreuve`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`epreuve` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_objectif` INT NULL,
  `type` VARCHAR(3) NULL,
  `difficulte` TEXT NULL,
  `duree` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_epreuve_objectif1_idx` (`id_objectif` ASC),
  CONSTRAINT `fk_epreuve_objectif1`
    FOREIGN KEY (`id_objectif`)
    REFERENCES `mydb`.`objectif` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`question` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_epreuve` INT NULL,
  `question` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_question_epreuve1_idx` (`id_epreuve` ASC),
  CONSTRAINT `fk_question_epreuve1`
    FOREIGN KEY (`id_epreuve`)
    REFERENCES `mydb`.`epreuve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`reponse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`reponse` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_question` INT NULL,
  `reponse` TEXT NULL,
  `justification` TEXT NULL,
  `etat` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reponse_question1_idx` (`id_question` ASC),
  CONSTRAINT `fk_reponse_question1`
    FOREIGN KEY (`id_question`)
    REFERENCES `mydb`.`question` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`invitation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`invitation` (
  `id_utilisateur` INT NOT NULL,
  `id_organisation` INT NOT NULL,
  `sens` VARCHAR(2) NULL,
  `etat` VARCHAR(3) NULL,
  `date` DATE NULL,
  PRIMARY KEY (`id_utilisateur`, `id_organisation`),
  INDEX `fk_utilisateur_has_organisation_organisation1_idx` (`id_organisation` ASC),
  INDEX `fk_utilisateur_has_organisation_utilisateur1_idx` (`id_utilisateur` ASC),
  CONSTRAINT `fk_utilisateur_has_organisation_utilisateur1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `mydb`.`utilisateur` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_utilisateur_has_organisation_organisation1`
    FOREIGN KEY (`id_organisation`)
    REFERENCES `mydb`.`organisation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`log` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_utilisateur` INT NULL,
  `tache` VARCHAR(45) NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_log_utilisateur1_idx` (`id_utilisateur` ASC),
  CONSTRAINT `fk_log_utilisateur1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `mydb`.`utilisateur` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`notification` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_utilisateur` INT NULL,
  `notification` VARCHAR(100) NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_notification_utilisateur1_idx` (`id_utilisateur` ASC),
  CONSTRAINT `fk_notification_utilisateur1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `mydb`.`utilisateur` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`session_cours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`session_cours` (
  `id_utilisateur` INT NOT NULL,
  `id_cours` INT NOT NULL,
  `date` DATE NULL,
  PRIMARY KEY (`id_utilisateur`, `id_cours`),
  INDEX `fk_utilisateur_has_cours_cours1_idx` (`id_cours` ASC),
  INDEX `fk_utilisateur_has_cours_utilisateur1_idx` (`id_utilisateur` ASC),
  CONSTRAINT `fk_utilisateur_has_cours_utilisateur1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `mydb`.`utilisateur` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_utilisateur_has_cours_cours1`
    FOREIGN KEY (`id_cours`)
    REFERENCES `mydb`.`cours` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`session_epreuve`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`session_epreuve` (
  `id_utilisateur` INT NOT NULL,
  `id_epreuve` INT NOT NULL,
  `note` FLOAT NULL,
  `nbr_tentative` INT NULL,
  `date` DATE NULL,
  PRIMARY KEY (`id_utilisateur`, `id_epreuve`),
  INDEX `fk_utilisateur_has_epreuve_epreuve1_idx` (`id_epreuve` ASC),
  INDEX `fk_utilisateur_has_epreuve_utilisateur1_idx` (`id_utilisateur` ASC),
  CONSTRAINT `fk_utilisateur_has_epreuve_utilisateur1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `mydb`.`utilisateur` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_utilisateur_has_epreuve_epreuve1`
    FOREIGN KEY (`id_epreuve`)
    REFERENCES `mydb`.`epreuve` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`sujet_forum`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`sujet_forum` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_utilisateur` INT NULL,
  `titre` VARCHAR(45) NULL,
  `description` TEXT NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_sujet_forum_utilisateur1_idx` (`id_utilisateur` ASC),
  CONSTRAINT `fk_sujet_forum_utilisateur1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `mydb`.`utilisateur` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`commentraire_forum`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`commentraire_forum` (
  `id_utilisateur` INT NOT NULL,
  `id_sujet` INT NOT NULL,
  `contenu` TEXT NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`id_utilisateur`, `id_sujet`),
  INDEX `fk_utilisateur_has_sujet_forum_sujet_forum1_idx` (`id_sujet` ASC),
  INDEX `fk_utilisateur_has_sujet_forum_utilisateur1_idx` (`id_utilisateur` ASC),
  CONSTRAINT `fk_utilisateur_has_sujet_forum_utilisateur1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `mydb`.`utilisateur` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_utilisateur_has_sujet_forum_sujet_forum1`
    FOREIGN KEY (`id_sujet`)
    REFERENCES `mydb`.`sujet_forum` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ban_forum`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ban_forum` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_utilisateur` INT NULL,
  `cause` VARCHAR(45) NULL,
  `date` DATE NULL,
  `duree` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ban_forum_utilisateur1_idx` (`id_utilisateur` ASC),
  CONSTRAINT `fk_ban_forum_utilisateur1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `mydb`.`utilisateur` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`evenement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`evenement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_organisation` INT NULL,
  `nom` VARCHAR(45) NULL,
  `description` TEXT NULL,
  `nbr_max` INT NULL,
  `affiche` VARCHAR(100) NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_evenement_organisation1_idx` (`id_organisation` ASC),
  CONSTRAINT `fk_evenement_organisation1`
    FOREIGN KEY (`id_organisation`)
    REFERENCES `mydb`.`organisation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`inscription_evenement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`inscription_evenement` (
  `id_evenement` INT NOT NULL,
  `id_utilisateur` INT NOT NULL,
  `date` DATE NULL,
  PRIMARY KEY (`id_evenement`, `id_utilisateur`),
  INDEX `fk_evenement_has_utilisateur_utilisateur1_idx` (`id_utilisateur` ASC),
  INDEX `fk_evenement_has_utilisateur_evenement1_idx` (`id_evenement` ASC),
  CONSTRAINT `fk_evenement_has_utilisateur_evenement1`
    FOREIGN KEY (`id_evenement`)
    REFERENCES `mydb`.`evenement` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_evenement_has_utilisateur_utilisateur1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `mydb`.`utilisateur` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`challenge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`challenge` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_organisation` INT NULL,
  `nom` VARCHAR(45) NULL,
  `description` TEXT NULL,
  `theme` VARCHAR(45) NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_challenge_organisation1_idx` (`id_organisation` ASC),
  CONSTRAINT `fk_challenge_organisation1`
    FOREIGN KEY (`id_organisation`)
    REFERENCES `mydb`.`organisation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`commentaire_cours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`commentaire_cours` (
  `id` INT NULL,
  `id_cours` INT NOT NULL,
  `id_utilisateur` INT NOT NULL,
  `commentaire` TEXT NULL,
  `date` DATETIME NULL,
  INDEX `fk_cours_has_utilisateur_utilisateur1_idx` (`id_utilisateur` ASC),
  INDEX `fk_cours_has_utilisateur_cours1_idx` (`id_cours` ASC),
  CONSTRAINT `fk_cours_has_utilisateur_cours1`
    FOREIGN KEY (`id_cours`)
    REFERENCES `mydb`.`cours` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cours_has_utilisateur_utilisateur1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `mydb`.`utilisateur` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`inscription_challenge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`inscription_challenge` (
  `id_utilisateur` INT NOT NULL,
  `id_challenge` INT NOT NULL,
  `date` DATE NULL,
  PRIMARY KEY (`id_utilisateur`, `id_challenge`),
  INDEX `fk_utilisateur_has_challenge_challenge1_idx` (`id_challenge` ASC),
  INDEX `fk_utilisateur_has_challenge_utilisateur1_idx` (`id_utilisateur` ASC),
  CONSTRAINT `fk_utilisateur_has_challenge_utilisateur1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `mydb`.`utilisateur` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_utilisateur_has_challenge_challenge1`
    FOREIGN KEY (`id_challenge`)
    REFERENCES `mydb`.`challenge` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
